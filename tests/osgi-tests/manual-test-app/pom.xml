<!--
  Copyright (c) 2006-2012 Tibor Adam Varga (tibor.adam.varga on gmail)

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.fluidity.platform.tests</groupId>
        <artifactId>osgi-tests</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.fluidity.platform.tests.osgi</groupId>
    <artifactId>manual-test-app</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>OSGi Tests: Manual Test Application</name>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <description><![CDATA[
        Some notes on Eclipse Equinox are in order. The versions referred to herein are the numbers
        included in JAR names.

        Version 3.7 and are 3.10 have been tested and found broken in terms of embedding the framework.

        Version 3.8 and 3.9 work and have a functioning console without any system bundles that works
        well with netcat.

        Version 3.11 requires the system bundles included in the "system" profile below to have a
        console at all, and their remote console pretends to implement the TELNET protocol without
        understanding a single TELNET command, which makes it impossible to use via netcat. You have
        to use an actual telnet client to access the console on these "modern" versions.

        Getting the Equinox Framework requires the following.

        If you are downloading version 3.8 or 3.9:

          1. Go to http://archive.eclipse.org/equinox/, and select the latest patch for your chosen
             version.

          2. Download the "Framework Only" JAR.

          3. Install it using the following Maven command, substituting the marked pieces as appropriate:

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dfile=<download path>/plugins/org.eclipse.osgi_<version>.<date>-<build>.jar

        If you are downloading the latest and "greatest":

          1. Go to http://download.eclipse.org/equinox/ and click on the stable build latest by date,
             not by listed order.

          2. Download and extract the SDK.

          3. Install the OSGi Framework using the following Maven command, substituting the marked
             pieces as appropriate:

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dfile=<extracted path>/plugins/org.eclipse.osgi_<version>.<date>-<build>.jar

          4. Install each bundle required for the OSGi console, using these Maven commands,
             substituting the marked pieces as appropriate (<version>.<date> is the Framework
             version used in the previous step, while <bundle version> is the respective
             version of the bundle being installed):

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dclassifier=org.eclipse.equinox.console \
                  -Dfile=<extracted path>/plugins/org.eclipse.equinox.console_<bundle version>.jar

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dclassifier=org.apache.felix.gogo.runtime \
                  -Dfile=<extracted path>/plugins/org.apache.felix.gogo.runtime_<bundle version>.jar

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dclassifier=org.apache.felix.gogo.shell \
                  -Dfile=<extracted path>/plugins/org.apache.felix.gogo.shell_<bundle version>.jar

            $ mvn -N install:install-file -DgroupId=org.eclipse -DartifactId=equinox -Dpackaging=jar \
                  -Dversion=<version>.<date> \
                  -Dclassifier=org.apache.felix.gogo.command \
                  -Dfile=<extracted path>/plugins/org.apache.felix.gogo.command_<bundle version>.jar

        The bundles are then listed in the "system" profile in this POM, so that they are installed
        and started when the OSGi framework starts.
    ]]></description>

    <dependencies>

        <dependency>
            <groupId>${fluidity.public.groupId}</groupId>
            <artifactId>fluid-tools-osgi-application</artifactId>
            <version>${project.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>testing-api</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.specification.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>equinox</artifactId>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>quiet</id>
            <activation><property><name>lean</name></property></activation>

            <dependencies>
                <dependency>
                    <groupId>${fluidity.features.groupId}</groupId>
                    <artifactId>logging-sink-impl</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>bundles</id>
            <activation><activeByDefault>true</activeByDefault></activation>

            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>bundle-1</artifactId>
                    <version>${project.version}</version>
                    <classifier>bundle</classifier>
                    <scope>provided</scope>
                    <optional>true</optional>
                </dependency>

                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>bundle-2</artifactId>
                    <version>${project.version}</version>
                    <classifier>bundle</classifier>
                    <scope>provided</scope>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>system</id>
            <activation><activeByDefault>true</activeByDefault></activation>

            <dependencies>
                <dependency>
                    <groupId>org.eclipse</groupId>
                    <artifactId>equinox</artifactId>
                    <classifier>org.eclipse.equinox.console</classifier>
                    <version>${equinox.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.eclipse</groupId>
                    <artifactId>equinox</artifactId>
                    <classifier>org.apache.felix.gogo.runtime</classifier>
                    <version>${equinox.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.eclipse</groupId>
                    <artifactId>equinox</artifactId>
                    <classifier>org.apache.felix.gogo.shell</classifier>
                    <version>${equinox.version}</version>
                </dependency>

                <dependency>
                    <groupId>org.eclipse</groupId>
                    <artifactId>equinox</artifactId>
                    <classifier>org.apache.felix.gogo.command</classifier>
                    <version>${equinox.version}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>

            <plugin>
                <groupId>${fluidity.plugin.groupId}</groupId>
                <artifactId>composition-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>${fluidity.plugin.groupId}</groupId>
                <artifactId>standalone-jar-maven-plugin</artifactId>

                <configuration>
                    <compact>true</compact>
                    <profiles>
                        <profile>system</profile>
                        <profile>bundles</profile>
                    </profiles>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>${fluidity.features.groupId}</groupId>
                        <artifactId>jar-manifest-command-launcher-impl</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
